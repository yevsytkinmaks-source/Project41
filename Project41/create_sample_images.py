#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
"""

import os
from PIL import Image, ImageDraw, ImageFont

def create_sample_image(text, filename, size=(400, 300), bg_color=(70, 130, 180), text_color=(255, 255, 255)):
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º"""
    
    # –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    img = Image.new('RGB', size, bg_color)
    draw = ImageDraw.Draw(img)
    
    # –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π —à—Ä–∏—Ñ—Ç
    try:
        font = ImageFont.truetype("arial.ttf", 24)
    except:
        try:
            font = ImageFont.truetype("/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf", 24)
        except:
            font = ImageFont.load_default()
    
    # –í—ã—á–∏—Å–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –¥–ª—è —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
    bbox = draw.textbbox((0, 0), text, font=font)
    text_width = bbox[2] - bbox[0]
    text_height = bbox[3] - bbox[1]
    
    x = (size[0] - text_width) // 2
    y = (size[1] - text_height) // 2
    
    # –†–∏—Å—É–µ–º —Ç–µ–∫—Å—Ç
    draw.text((x, y), text, fill=text_color, font=font)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    img.save(filename)
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {filename}")

def create_all_sample_images():
    """–°–æ–∑–¥–∞–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    directories = ["images/rules", "images/solver", "images/textbooks", "images/help"]
    for directory in directories:
        if not os.path.exists(directory):
            os.makedirs(directory)
    
    # –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    samples = [
        {
            "text": "üîí –ü–†–ê–í–ò–õ–ê\nRU–£—á–µ–±–Ω–∏–∫\n\n–°–æ–±–ª—é–¥–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞\n–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è",
            "filename": "images/rules/rules_sample.png",
            "bg_color": (220, 53, 69),  # –ö—Ä–∞—Å–Ω—ã–π
            "size": (500, 400)
        },
        {
            "text": "üßÆ –†–ï–®–ê–¢–û–†\n\nSoon...\n\n–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
            "filename": "images/solver/solver_sample.png", 
            "bg_color": (255, 193, 7),  # –ñ–µ–ª—Ç—ã–π
            "size": (500, 400)
        },
        {
            "text": "üìö –£–ß–ï–ë–ù–ò–ö–ò\n\n–ü–æ–∏—Å–∫ –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ\n—à–∫–æ–ª—å–Ω—ã—Ö —É—á–µ–±–Ω–∏–∫–æ–≤\n\n1-11 –∫–ª–∞—Å—Å—ã",
            "filename": "images/textbooks/textbooks_sample.png",
            "bg_color": (40, 167, 69),  # –ó–µ–ª–µ–Ω—ã–π  
            "size": (500, 400)
        },
        {
            "text": "‚ùì –ü–û–ú–û–©–¨\n\n–ê–≤—Ç–æ—Ä —É–∫–∞–∑–∞–Ω:\n‚Ä¢ –ù–∞ –æ–±–ª–æ–∂–∫–µ\n‚Ä¢ –ù–∞ —Ç–∏—Ç—É–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ\n‚Ä¢ –í –∫–∞—Ç–∞–ª–æ–≥–µ",
            "filename": "images/help/help_author_sample.png",
            "bg_color": (108, 117, 125),  # –°–µ—Ä—ã–π
            "size": (500, 400)
        }
    ]
    
    for sample in samples:
        if not os.path.exists(sample["filename"]):
            create_sample_image(
                text=sample["text"],
                filename=sample["filename"],
                size=sample["size"],
                bg_color=sample["bg_color"]
            )
        else:
            print(f"‚ö†Ô∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {sample['filename']}")

if __name__ == "__main__":
    print("üñºÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
    create_all_sample_images()
    print("‚úÖ –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å–æ–∑–¥–∞–Ω—ã!")